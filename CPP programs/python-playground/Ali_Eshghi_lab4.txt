{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #Ali Eshghi\
#1112261\
#Lab 4\
\
#LAB4 / PS1\
\
brics_mmbr=['Brazil', 'Russia', 'India', 'China', 'Sri Lanka']\
cntry=input("Enter the name of country: ")\
if cntry in brics_mmbr:\
    print(cntry, "is a member of BRICS")\
else:\
    print(cntry, "is not a member of BRICS")\
\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS1.py ===============\
##Enter the name of country: Iran\
##Iran is not a member of BRICS\
##>>> \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
#LAB4 / PS2\
Nums = list(range(1,10+1))\
for i in Nums:\
    if i % 2 == 0:\
        Nums.remove(i)\
print(Nums)\
\
\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS2.py ===============\
##[1, 3, 5, 7, 9]\
##\
##>>> \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
#LAB4 / PS3\
\
def main():\
    original_list = createList()\
    organized_list = removeDuplicates(original_list)\
    print("Original List: ",original_list)\
    print("List after removing duplicates: ",organized_list)\
\
def createList() -> list:\
    original_list = []\
    again = 'Y'\
    while again.upper() == 'Y':\
        item = input("Enter a number: ")\
        original_list.append(float(item))\
        again = input("Do you want to add another item (Y = yes / anything else: no): ")\
\
    print("Here is your list: ",original_list)\
    return original_list\
\
def removeDuplicates(original_list:list) -> list:\
    index=0\
    original_list.sort()\
    organized_list=[]\
    for i in original_list:\
        if i not in organized_list:\
            organized_list.append(float(i))\
    return organized_list\
\
if __name__=="__main__":\
    main()\
\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS3.py ===============\
##Enter a number: 1\
##Do you want to add another item (Y = yes / anything else: no): y\
##Enter a number: 2\
##Do you want to add another item (Y = yes / anything else: no): y\
##Enter a number: 3\
##Do you want to add another item (Y = yes / anything else: no): y\
##Enter a number: 4\
##Do you want to add another item (Y = yes / anything else: no): y\
##Enter a number: 3\
##Do you want to add another item (Y = yes / anything else: no): y\
##Enter a number: 5\
##Do you want to add another item (Y = yes / anything else: no): y\
##Enter a number: 6\
##Do you want to add another item (Y = yes / anything else: no): y\
##Enter a number: 4\
##Do you want to add another item (Y = yes / anything else: no): n\
##Here is your list:  [1.0, 2.0, 3.0, 4.0, 3.0, 5.0, 6.0, 4.0]\
##Original List:  [1.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 6.0]\
##List after removing duplicates:  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\
##>>> \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
#LAB 4/ PS4\
\
nums = (1,2,3,4,5,6,7,8,-3,-6,-2-1)\
nums_list = []\
for i in nums:\
    if i > 0:\
        nums_list.append(i)\
\
nums_list.sort()\
nums_list_tupleV = tuple(nums_list)\
\
print("Original Tuple :",nums)\
print("New Tuple with Positive numbers :",nums_list_tupleV)\
\
\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS4.py ===============\
##Original Tuple : (1, 2, 3, 4, 5, 6, 7, 8, -3, -6, -3)\
##New Tuple with Positive numbers : (1, 2, 3, 4, 5, 6, 7, 8)\
##>>> \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
#LAB4 / PS5\
\
def readValues() -> list:\
    num_list=[]\
    qte=""\
    while qte.upper()!="Q":\
        qte = input ("enter a value,(enter Q to quit): ")\
        if qte.upper() != "Q":\
            num_list.append(float(qte))\
    return num_list\
\
def findLargest(num_list:list) -> float:\
    high_num = max(num_list)\
\
    return high_num\
\
def display(num_list:list, high_num:float) -> None:\
    new_high_num = str(high_num) + ' <== This is the largest number'\
    check_list = []\
    for i in num_list:\
        if i != high_num:\
            check_list.append(i)\
        elif i == high_num:\
            check_list.append(new_high_num)\
\
    print("Here are the numbers in the list: ")\
    for i in check_list:\
        print(i)\
        \
def main():\
    num_list = readValues()\
    high_num = findLargest(num_list)\
    display(num_list,high_num)\
\
if __name__=="__main__":\
    main()\
\
\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS5.py ===============\
##enter a value,(enter Q to quit): 4\
##enter a value,(enter Q to quit): 54\
##enter a value,(enter Q to quit): 76\
##enter a value,(enter Q to quit): 23\
##enter a value,(enter Q to quit): 8\
##enter a value,(enter Q to quit): 44\
##enter a value,(enter Q to quit): 1\
##enter a value,(enter Q to quit): q\
##Here are the numbers in the list: \
##4.0\
##54.0\
##76.0 <== This is the largest number\
##23.0\
##8.0\
##44.0\
##1.0\
##>>> \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
#LAB4 / PS6\
\
def main():\
    words = input("Enter two words (with space within them): ")\
    are_anagrams(words)\
\
def are_anagrams(words:str)->(str,str):\
    try:\
        checklist1 = []\
        checklist2 = []\
        wordlist = words.split()\
        word1 = wordlist[0]\
        word2 = wordlist[1]\
\
        for x in word1:\
            if x not in checklist1:\
                checklist1.append(x)\
                checklist1.sort()\
\
        for z in word2:\
            if z not in checklist2:\
                checklist2.append(z)\
                checklist2.sort()\
\
        if checklist1 == checklist2:\
            print("The words ",word1,' and ',word2, " are anagrams.")\
        else:\
            print("Bad input")\
\
    except IndexError:\
            print("Bad input")\
\
if __name__=="__main__":\
    main()\
\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS6.py ===============\
##Enter two words separated by a space: num mun\
##The words  num  and  mun  are anagrams.\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS6.py ===============\
##Enter two words separated by a space: iceman cinema\
##The words  iceman  and  cinema  are anagrams.\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS6.py ===============\
##Enter two words separated by a space: ali lia\
##The words  ali  and  lia  are anagrams.\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS6.py ===============\
##Enter two words separated by a space: kos sok\
##The words  kos  and  sok  are anagrams.\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS6.py ===============\
##Enter two words separated by a space: bazme chaghal\
##Bad input\
##>>> \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
#LAB 4 / PS7\
\
set1 = \{1,2,3,4,5\}\
set2 = \{2,4,6,8\}\
set3 = \{1,5,9,13,17\}\
set_1_25 = set(list(range(1,26)))\
\
set_a = set1 ^ set2\
print("A)",set_a)\
\
set_b = set1 ^ set2 ^ set3\
print("B)",set_b)\
\
set_c = (set1 & set2) | (set1 & set3)\
print("C)",set_c)\
\
set_d = set_1_25 - set1\
print("D)",set_d)\
\
set_e = set_1_25 - (set1 | set2 | set3)\
print("E)",set_e)\
\
set_f = set_1_25 | (set1 | set2 | set3)\
print("F)",set_f)\
\
\
##>>> \
##=============== RESTART: /Users/alieshghi/Desktop/LAB 4/PS7.py ===============\
##A) \{1, 3, 5, 6, 8\}\
##B) \{17, 3, 6, 8, 9, 13\}\
##C) \{1, 2, 4, 5\}\
##D) \{6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25\}\
##E) \{7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25\}\
##F) \{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25\}\
##>>> \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
#LAB4 / PS8\
\
def main():\
    add_coffee()\
    del_coffee()\
    mod_coffee()\
    search()\
    show()\
\
def add_coffee():\
    another = 'y'\
    coffee_file = open('coffee.txt','a')\
    \
    while another == 'y' or another == 'Y':\
        print('Enter the following coffee data:')\
        descr = input('Description: ')\
        qty = int(input('Quantity (in pounds): '))\
\
        coffee_file.write(descr + '\\n')\
        coffee_file.write(str(qty) + '\\n')\
    \
        print('Do you want to add another record?')\
        another = input('Y = yes, anything else = no: ')\
    \
    coffee_file.close()\
    print('Data appended to coffee.txt.')\
\
import os\
\
def del_coffee():\
    found = False\
    search = input('Which coffee do you want to delete? ')\
    coffee_file = open('coffee.txt', 'r')\
    temp_file = open('temp.txt', 'w')\
    descr = coffee_file.readline()\
    \
    while descr != '':\
        qty = float(coffee_file.readline())\
        descr = descr.rstrip('\\n')\
    \
        if descr != search:\
            temp_file.write(descr + '\\n')\
            temp_file.write(str(qty) + '\\n')\
            \
        else:\
            found = True\
        \
        descr = coffee_file.readline()\
    \
    coffee_file.close()\
    temp_file.close()\
    \
    os.remove('coffee.txt')\
    \
    os.rename('temp.txt', 'coffee.txt')\
    \
    if found:\
        print('The file has been updated.')\
        \
    else:\
        print('That item was not found in the file.')\
\
import os\
\
def mod_coffee():\
    found = False\
    search = input('Enter a description to search for: ')\
    new_qty = int(input('Enter the new quantity: '))\
    coffee_file = open('coffee.txt', 'r')\
    temp_file = open('temp.txt', 'w')\
    descr = coffee_file.readline()\
    \
    while descr != '':\
        qty = float(coffee_file.readline())\
        descr = descr.rstrip('\\n')\
        \
        if descr == search:\
            temp_file.write(descr + '\\n')\
            temp_file.write(str(new_qty) + '\\n')\
            \
            found = True\
        else:\
            temp_file.write(descr + '\\n')\
            temp_file.write(str(qty) + '\\n')\
        \
        descr = coffee_file.readline()\
    \
    coffee_file.close()\
    temp_file.close()\
    \
    os.remove('coffee.txt')\
    os.rename('temp.txt', 'coffee.txt')\
    \
    if found:\
        print('The file has been updated.')\
    else:\
        print('That item was not found in the file.')\
\
def search():\
    found = False\
    search = input('Enter a description to search for: ')\
    coffee_file = open('coffee.txt', 'r')\
    descr = coffee_file.readline()\
    \
    while descr != '':\
        qty = float(coffee_file.readline())\
        descr = descr.rstrip('\\n')\
\
        if descr == search:\
            print('Description:', descr)\
            print('Quantity:', qty)\
            print()\
                \
            found = True\
\
        descr = coffee_file.readline()\
\
    coffee_file.close()\
    if not found:\
        print('That item was not found in the file.')\
\
def show():\
    coffee_file = open('coffee.txt', 'r')\
    descr = coffee_file.readline()\
    \
    while descr != '':\
        qty = float(coffee_file.readline())\
        descr = descr.rstrip('\\n')\
        \
        print('Description:', descr)\
        print('Quantity:', qty)\
        \
        descr = coffee_file.readline()\
    \
    coffee_file.close()\
\
if __name__=='__main__':\
    main()\
\
##>>> \
##============== RESTART: /Users/alieshghi/Desktop/LAB 4/lab 8.py ==============\
##Enter the following coffee data:\
##Description: Sumatra Medium Roast\
##Quantity (in pounds): 45\
##Do you want to add another record?\
##Y = yes, anything else = no: y\
##Enter the following coffee data:\
##Description: Turkish\
##Quantity (in pounds): 55\
##Do you want to add another record?\
##Y = yes, anything else = no: y\
##Enter the following coffee data:\
##Description: Brazilian\
##Quantity (in pounds): 40\
##Do you want to add another record?\
##Y = yes, anything else = no: y\
##Enter the following coffee data:\
##Description: black\
##Quantity (in pounds): 33\
##Do you want to add another record?\
##Y = yes, anything else = no: n\
##Data appended to coffee.txt.\
##Which coffee do you want to delete? \
##That item was not found in the file.\
##Enter a description to search for: Turkish\
##Enter the new quantity: 60\
##The file has been updated.\
##Enter a description to search for: black\
##Description: black\
##Quantity: 33.0\
##\
##Description: Sumatra Medium Roast\
##Quantity: 25.0\
##Description: Good\
##Quantity: 45.0\
##Description: Sumatra Medium Roast\
##Quantity: 25.0\
##Description: Good\
##Quantity: 45.0\
##Description: Sumatra Medium Roast\
##Quantity: 45.0\
##Description: Brazilian\
##Quantity: 70.0\
##Description: Turkish\
##Quantity: 60.0\
##Description: Sumatra Regular\
##Quantity: 10.0\
##Description: Sumatra Medium Roast\
##Quantity: 45.0\
##Description: Turkish\
##Quantity: 60.0\
##Description: Brazilian\
##Quantity: 40.0\
##Description: black\
##Quantity: 33.0\
##>>> \
\
\
#the coffee.txt file\
Sumatra Medium Roast\
25.0\
Good\
45.0\
Sumatra Medium Roast\
25.0\
Good\
45.0\
Sumatra Medium Roast\
45.0\
Brazilian\
70.0\
Turkish\
60\
Sumatra Regular\
10.0\
Sumatra Medium Roast\
45.0\
Turkish\
60\
Brazilian\
40.0\
black\
33.0\
\pard\tx720\tx1440\tx2070\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
}